%erotimata a,b
load Noisy.mat
L = 990192;
Fs = 44100;
f = linspace(-Fs/2, Fs/2, L);
Y = fftshift(fft(yw));
figure(1);
plot(f, 20*log10(abs(Y)));
title('Fourier Transform of Noisy.mat');
y = filter(BandStop, yw);
sound(yw,Fs);
%erotimata c,e
load Noisy.mat
load BandStop.mat
L = 990192;
Fs = 44100;
f = linspace(-Fs/2, Fs/2, L);
Y = fftshift(fft(yw));
figure(1);
plot(f, 20*log10(abs(Y)));
title('Fourier Transform of Noisy');
y = filter(BandStop, yw);
figure(2);
plot(y(990192-250:990192));
title('Guitar Riff');
noise = filter(BandStop, yw);
figure(3);
plot(noise(70000:70250));
title('Noise');
N = fftshift(fft(noise));
figure(4);
plot(f, 20*log10(abs(N)));
title('Fourier Transform of Noisy.mat after filtering');
sound(y, Fs);
function Hd = BandStop
%BANDSTOP Returns a discrete-time filter object.
% MATLAB Code
% Generated by MATLAB(R) 9.12 and Signal Processing Toolbox 9.0.
% Generated on: 08-May-2023 13:59:41
% Butterworth Bandstop filter designed using FDESIGN.BANDSTOP.
% All frequency values are in Hz.
Fs = 48000; % Sampling Frequency
Fpass1 = 7200; % First Passband Frequency
Fstop1 = 9600; % First Stopband Frequency
Fstop2 = 12000; % Second Stopband Frequency
Fpass2 = 14400; % Second Passband Frequency
Apass1 = 0.5; % First Passband Ripple (dB)
Astop = 60; % Stopband Attenuation (dB)
Apass2 = 1; % Second Passband Ripple (dB)
match = 'stopband'; % Band to match exactly
% Construct an FDESIGN object and call its BUTTER method.
h = fdesign.bandstop(Fpass1, Fstop1, Fstop2, Fpass2, Apass1, Astop, ...
 Apass2, Fs);
Hd = design(h, 'butter', 'MatchExactly', match);
% [EOF]
